{$include_once RSStructures.simba}
{$include_once RSAnimationSequence.simba}
{$include_once RSClient.simba}
{$include_once RSTile.simba}

Function RSDynamicObject.ID: Int32; constref;
begin
  Result := RGetInt(R_EIOS, ref, DYNAMICOBJECT_ID);
end;

Function RSDynamicObject.AnimationSequence: RSAnimationSequence; constref;
begin
  Result.ref := RGetObject(R_EIOS, ref, DYNAMICOBJECT_ANIMATIONSEQUENCE);
end;

Function RSDynamicObject.AnimationFrameID: Int32; constref;
begin
  Result := RGetInt(R_EIOS, ref, DYNAMICOBJECT_ANIMATIONFRAME);
end;

Function RSDynamicObject.Flags: Int32; constref;
begin
  Result := RGetInt(R_EIOS, ref, DYNAMICOBJECT_FLAGS);
end;

Function RSDynamicObject.Orientation: Int32; constref;
begin
  Result := RGetInt(R_EIOS, ref, DYNAMICOBJECT_ORIENTATION);
end;

Function RSDynamicObject.Plane: Int32; constref;
begin
  Result := RGetInt(R_EIOS, ref, DYNAMICOBJECT_PLANE);
end;

Function RSDynamicObject.LocalX: Int32; constref;
begin
  Result := (RGetInt(R_EIOS, ref, DYNAMICOBJECT_X) shl 7) + (1 shl 6);
end;

Function RSDynamicObject.LocalY: Int32; constref;
begin
  Result := (RGetInt(R_EIOS, ref, DYNAMICOBJECT_Y) shl 7) + (1 shl 6);
end;

Function RSDynamicObject.LocalTile: RSTile; constref;
begin
  Result.X := self.LocalX;
  Result.Y := self.LocalY;
end;

Function RSDynamicObject.Tile: RSTile; constref;
begin
  Result.X := RSClient.BaseX + RGetInt(R_EIOS, ref, DYNAMICOBJECT_X);
  Result.Y := RSClient.BaseY + RGetInt(R_EIOS, ref, DYNAMICOBJECT_Y);
end;
