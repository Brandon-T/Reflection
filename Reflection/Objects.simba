(*
R_GetGameObjectID
~~~~~~~~~~~~~~~~~~~~~~~~~~

Returns the ID of the game object on the given global tile.

Example:

   writeln(R_GetGameObjectID(3187, 3293));

*)
Function R_GetGameObjectID(X, Y: Int32): Int32;
var
  GameObject: RSObject;
  Definition: RSObjectDefinition;
begin
  GameObject := RSObject.Get(RSObjectType.GAME_OBJECT, X, Y);
  Definition := GameObject.Definition;
  Result := Definition.ID;
  Definition.Free;
  GameObject.Free;
end;

(*
R_GetGameObjectName
~~~~~~~~~~~~~~~~~~~~~~~~~~

Returns the Name of the game object on the given global tile.

Example:

   writeln(R_GetGameObjectName(3187, 3293));

*)
Function R_GetGameObjectName(X, Y: Int32): String;
var
  GameObject: RSObject;
  Definition: RSObjectDefinition;
begin
  GameObject := RSObject.Get(RSObjectType.GAME_OBJECT, X, Y);
  Definition := GameObject.Definition;
  Result := Definition.Name;
  Definition.Free;
  GameObject.Free;
end;

(*
R_GetAllVisibleGameObjectTiles
~~~~~~~~~~~~~~~~~~~~~~~~~~

Returns the global tiles of an object with a specific name that is visible
  on the minimap.

Example:

   writeln(R_GetAllVisibleGameObjectTiles(1276));

*)
Function R_GetAllVisibleGameObjectTiles(ItemID: Int32): Array of RSTile;
var
  I: Integer;
  GameObjects: Array of RSObject;
  Definition: RSObjectDefinition;
begin
  GameObjects := RSObject.GetAllObjectOnScreen(GAME_OBJECT);

  for I := 0 to High(GameObjects) do
  begin
    Definition := GameObjects[i].Definition;
    if (Definition.ID = ItemID) then
      Result += GameObjects[i].Tile;
    Definition.Free;
  end;
  RSTypeArray(GameObjects).Free;
end;

Function R_GetAllVisibleGameObjectTiles(Name: String): Array of RSTile; overload;
var
  I: Integer;
  GameObjects: Array of RSObject;
  Definition: RSObjectDefinition;
begin
  GameObjects := RSObject.GetAllObjectOnScreen(GAME_OBJECT);

  for I := 0 to High(GameObjects) do
  begin
    Definition := GameObjects[i].Definition;
    if (Definition.Name = Name) then
      Result += GameObjects[i].Tile;
    Definition.Free;
  end;
  RSTypeArray(GameObjects).Free;
end;

(*
R_GetMainscreenGameObjectTiles
~~~~~~~~~~~~~~~~~~~~~~~~~~

Returns the global tiles of an object with a specific name that is viewable
  on the Mainscreen.

Example:

   Mouse.Move(R_GetMainscreenGameObjectTiles(1276)[0].ToLocal.TileToMS);;

*)
Function R_GetMainscreenGameObjectTiles(ItemID: Int32): Array of RSTile;
var
  I, W, H: Integer;
  Tile: RSTile;
  MSBounds: TBox;
  GameObjects: Array of RSObject;
  Definition: RSObjectDefinition;
begin
  GameObjects := RSObject.GetAllObjectOnScreen(GAME_OBJECT);
  MSBounds := R_MainscreenBounds;
  for I := 0 to High(GameObjects) do
  begin
    Definition := GameObjects[i].Definition;
    Tile := RSTile(GameObjects[i].LocalTile).TileToMS;
    if ((Definition.ID = ItemID) and (Tile.X > MSBounds.X1) and (Tile.X < MSBounds.X2) and (Tile.Y > MSBounds.Y1) and (Tile.Y < MSBounds.Y2)) then
      Result += GameObjects[i].Tile;
    Definition.Free;
  end;
  RSTypeArray(GameObjects).Free;
end;

Function R_GetMainscreenGameObjectTiles(Name: String): Array of RSTile; overload;
var
  I, W, H: Integer;
  Tile: RSTile;
  MSBounds: TBox;
  GameObjects: Array of RSObject;
  Definition: RSObjectDefinition;
begin
  GameObjects := RSObject.GetAllObjectOnScreen(GAME_OBJECT);
  MSBounds := R_MainscreenBounds;
  for I := 0 to High(GameObjects) do
  begin
    Definition := GameObjects[i].Definition;
    Tile := RSTile(GameObjects[i].LocalTile).TileToMS;
    if ((Definition.Name = Name) and (Tile.X > MSBounds.X1) and (Tile.X < MSBounds.X2) and (Tile.Y > MSBounds.Y1) and (Tile.Y < MSBounds.Y2)) then
      Result += GameObjects[i].Tile;
    Definition.Free;
  end;
  RSTypeArray(GameObjects).Free;
end;

