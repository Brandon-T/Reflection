(*
R_GetMainscreenGroundItemByID
~~~~~~~~~~~~~~~~~~~~~~~~~~

Returns the Mainscreen coordinates of a specific item ID.

Example:

   Mouse.Move(R_GetMainscreenGroundItemByID(526)[0]);
*)
Function R_GetMainscreenGroundItemByID(ItemID: Int32): Array of RSTile;
var
  I, W, H: Integer;
  ResultTile: RSTile;
  Items: Array of RSTile;
begin
  Items := RSGroundObject.GetTileByID(ItemID);
  if High(Items) < 1 then
    Exit;

  for I := 0 to High(Items) do
  begin
    GetClientDimensions(W, H);
    ResultTile := RSTile(Items[i]).ToLocal.TileToMS;
    if (not ((ResultTile.X < 0) or (ResultTile.X > W) or (ResultTile.Y < 0) or (ResultTile.Y > H))) then
      Result += ResultTile;
  end;

  RSTypeArray(Items).Free;
end;

(*
R_GetMainscreenGroundItemCoordsByID
~~~~~~~~~~~~~~~~~~~~~~~~~~

Returns the Mainscreen coordinates of a specific item ID.

Example:

   Mouse.Move(R_GetMainscreenGroundItemCoordsByID(526)[0]);
*)
Function R_GetMainscreenGroundItemCoordsByID(ItemID: Int32): TPointArray;
var
  I, W, H: Integer;
  ResultTile: RSTile;
  Items: Array of RSTile;
begin
  Items := RSGroundObject.GetTileByID(ItemID);
  if High(Items) = -1 then
    Exit;

  for I := 0 to High(Items) do
  begin
    GetClientDimensions(W, H);
    ResultTile := RSTile(Items[i]).ToLocal.TileToMS;
    if (not ((ResultTile.X < 0) or (ResultTile.X > W) or (ResultTile.Y < 0) or (ResultTile.Y > H))) then
      Result += ResultTile.ToLocal.TileToMS;
  end;

  RSTypeArray(Items).Free;
end;

(*
R_GetMinimapGroundItemByID
~~~~~~~~~~~~~~~~~~~~~~~~~~

Returns the Minimap coordinates of a specific item ID.

Example:

   Mouse.Move(R_GetMinimapGroundItemByID(526)[0]);
*)
Function R_GetMinimapGroundItemByID(ItemID: Int32): Array of RSTile;
var
  I, W, H: Integer;
  ResultTile: RSTile;
  Items: Array of RSTile;
begin
  Items := RSGroundObject.GetTileByID(ItemID);
  if Length(Items) < 1 then
    Exit;

  for I := 0 to Length(items) - 1 do
  begin
    GetClientDimensions(W, H);
    ResultTile := RSTile(Items[I]).ToLocal.TileToMM;
    if (not ((ResultTile.X < 0) or (ResultTile.X > W) or (ResultTile.Y < 0) or (ResultTile.Y > H))) then
      Result += ResultTile;
  end;

  RSTypeArray(Items).Free;
end;

(*
R_IsGroundItemOnTile
~~~~~~~~~~~~~~~~~~~~~~~~~~

Returns the True if ground item is on a specific tile.

Example:

   writeln(R_IsGroundItemOnTile(314, player.Tile.X, player.Tile.Y));
*)
Function R_IsGroundItemOnTile(ItemID, X, Y: Int32): Boolean;
var
  I: Integer;
  Items: Array of RSGroundItem;
begin
  Items := RSGroundObject.GetItemsAt(X, Y);
  if Length(Items) < 1 then
    Exit;

  for I := 0 to Length(Items) - 1 do
  begin
    if Items[I].ID = ItemID then
    begin
      RSTypeArray(Items).Free;
      Exit(True);
    end;
  end;
  RSTypeArray(Items).Free;
end;

(*
R_GetGroundItemStackSize
~~~~~~~~~~~~~~~~~~~~~~~~~~

Returns the number count of ground items of a given ID
 on a specific tile.

Example:

   writeln(R_GetGroundItemStackSize(314, player.Tile.X, player.Tile.Y));
*)
Function R_GetGroundItemStackSize(ItemID, X, Y: Int32): Int32;
var
  I: Integer;
  Items: Array of RSGroundItem;
begin
  Items := RSGroundObject.GetItemsAt(X, Y);
  if Length(Items) < 1 then
    Exit;

  for I := 0 to Length(Items) - 1 do
  begin
    if Items[I].ID = ItemID then
    begin
      RSTypeArray(Items).Free;
      Exit(Items[I].StackSize);
    end;
  end;
  RSTypeArray(Items).Free;
end;

