{$include_once RSStructures.simba}


Function RSAnimationSkeleton.ID: Int32;
begin
  Result := RGetInt(R_EIOS, ref, ANIMATIONSKELETON_ID);
end;

Function RSAnimationSkeleton.TransformCount: Int32;
begin
  Result := RGetInt(R_EIOS, ref, ANIMATIONSKELETON_TRANSFORMATIONCOUNT);
end;

Function RSAnimationSkeleton.TransformationTypes: Array of Int32;
var
  Types: Pointer;
  TypesSize: SizeUInt;
begin
  TypesSize := 0;
  Types := RGetArray(R_EIOS, ref, TypesSize, ANIMATIONSKELETON_TRANSFORMATIONTYPES);
  Result := RGetIntArray(R_EIOS, Types, 0, TypesSize);
  RFreeObject(R_EIOS, Types);
end;

Function RSAnimationSkeleton.Transformations: Array of Array of Int32;
var
  Types: Pointer;
  Transformations: Array of Pointer;
  I, TypesSize: SizeUInt;
begin
  TypesSize := 0;
  Types := RGetArray(R_EIOS, ref, TypesSize, ANIMATIONSKELETON_TRANSFORMATIONS);
  Transformations := RGetObjectArray(R_EIOS, Types, 0, TypesSize);
  RFreeObject(R_EIOS, Types);

  SetLength(Result, TypesSize);

  for I := 0 to TypesSize - 1 do
  begin
    Result[I] := RGetIntArray(R_EIOS, Transformations[I], 0, RGetArraySize(R_EIOS, Transformations[I]));
  end;

  RSTypeArray(Transformations).Free;
end;
