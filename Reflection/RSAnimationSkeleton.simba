{$include_once RSStructures.simba}


Function RSAnimationSkeleton.ID: Int32; constref;
begin
  Result := RGetInt(R_EIOS, ref, ANIMATIONSKELETON_ID);
end;

Function RSAnimationSkeleton.TransformCount: Int32; constref;
begin
  Result := RGetInt(R_EIOS, ref, ANIMATIONSKELETON_TRANSFORMATIONCOUNT);
end;

Function RSAnimationSkeleton.TransformationTypes: Array of Int32; constref;
var
  Types: Pointer;
  TypesSize: SizeUInt;
begin
  TypesSize := 0;
  Types := RGetArray(R_EIOS, ref, TypesSize, ANIMATIONSKELETON_TRANSFORMATIONTYPES);
  if Types = nil then
    Exit;

  Result := RGetIntArray(R_EIOS, Types, 0, TypesSize);
  RFreeObject(R_EIOS, Types);
end;

Function RSAnimationSkeleton.Transformation(Index: SizeUInt): Array of Int32; constref;
var
  Transforms: Pointer;
  Transformations: Pointer;
  TransformsSize, IndexSize: SizeUInt;
begin
  TransformsSize := 0;
  Transforms := RGetArray(R_EIOS, ref, TransformsSize, ANIMATIONSKELETON_TRANSFORMATIONS);
  if Transforms = nil then
    Exit;

  Transformations := RGetObjectArray(R_EIOS, Transforms, Index);
  RFreeObject(R_EIOS, Transforms);

  If Transformations <> nil then
  begin
    IndexSize := RGetArraySize(R_EIOS, Transformations);
    if IndexSize > 0 then
    begin
      Result := RGetIntArray(R_EIOS, Transformations, 0, IndexSize);
    end;
  end;

  RFreeObject(R_EIOS, Transformations);
end;

Function RSAnimationSkeleton.Transformations: Array of Array of Int32; constref;
var
  Transforms: Pointer;
  Transformations: Array of Pointer;
  I, TransformsSize: SizeUInt;
begin
  TransformsSize := 0;
  Transforms := RGetArray(R_EIOS, ref, TransformsSize, ANIMATIONSKELETON_TRANSFORMATIONS);
  if Transforms = nil then
    Exit;

  Transformations := RGetObjectArray(R_EIOS, Transforms, 0, TransformsSize);
  RFreeObject(R_EIOS, Transforms);

  SetLength(Result, TransformsSize);

  for I := 0 to TransformsSize - 1 do
  begin
    if Transformations[I] <> nil then
      Result[I] := RGetIntArray(R_EIOS, Transformations[I], 0, RGetArraySize(R_EIOS, Transformations[I]));
  end;

  RSTypeArray(Transformations).Free;
end;
