{$include_once Static.simba}
{$include_once RSStructures.simba}


Function RSAnimation.FrameCount: Int32; constref;
begin
  Result := RGetInt(R_EIOS, ref, ANIMATION_FRAMECOUNT);
end;

Function RSAnimation.Frame(Index: Int32): Int32; constref;
var
  Frames: Pointer;
  FramesSize: SizeUInt;
begin
  FramesSize := 0;
  Frames := RGetArray(R_EIOS, ref, ANIMATION_FRAMES);
  if Frames = nil then
    Exit;

  Result := RGetIntArray(R_EIOS, Frames, Index);
  RFreeObject(R_EIOS, Frames);
end;

Function RSAnimation.Frames: Array of Int32; constref;
var
  Frames: Pointer;
  FramesSize: SizeUInt;
begin
  FramesSize := 0;
  Frames := RGetArray(R_EIOS, ref, FramesSize, ANIMATION_FRAMES);
  if Frames = nil then
    Exit;

  Result := RGetIntArray(R_EIOS, Frames, 0, FramesSize);
  RFreeObject(R_EIOS, Frames);
end;

Function RSAnimation.TransformX: Array of Int32; constref;
var
  Transform: Pointer;
  TransformSize: SizeUInt;
begin
  TransformSize := 0;
  Transform := RGetArray(R_EIOS, ref, TransformSize, ANIMATION_TRANSFORMX);
  if Transform = nil then
    Exit;

  Result := RGetIntArray(R_EIOS, Transform, 0, TransformSize);
  RFreeObject(R_EIOS, Transform);
end;

Function RSAnimation.TransformY: Array of Int32; constref;
var
  Transform: Pointer;
  TransformSize: SizeUInt;
begin
  TransformSize := 0;
  Transform := RGetArray(R_EIOS, ref, TransformSize, ANIMATION_TRANSFORMY);
  if Transform = nil then
    Exit;

  Result := RGetIntArray(R_EIOS, Transform, 0, TransformSize);
  RFreeObject(R_EIOS, Transform);
end;

Function RSAnimation.TransformZ: Array of Int32; constref;
var
  Transform: Pointer;
  TransformSize: SizeUInt;
begin
  TransformSize := 0;
  Transform := RGetArray(R_EIOS, ref, TransformSize, ANIMATION_TRANSFORMZ);
  if Transform = nil then
    Exit;

  Result := RGetIntArray(R_EIOS, Transform, 0, TransformSize);
  RFreeObject(R_EIOS, Transform);
end;

Function RSAnimation.Skeleton: RSAnimationSkeleton; constref;
begin
  Result.ref := RGetObject(R_EIOS, ref, ANIMATION_SKELETON);
end;
