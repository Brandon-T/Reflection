{$include_once Internal/Reflection.simba}
{$include_once Constants.simba}
{$include_once Mouse.simba}
{$include_once Menu.simba}
{$include_once GameTab.simba}

type
  //Spells
  TStandardSpell = (
    LUMBRIDGE_HOME_TELEPORT = 5,
    WIND_STRIKE,
    CONFUSE,
    ENCHANT_CROSSBOW_BOLT,
    WATER_STRIKE,
    LVL_1_ENCHANT,
    EARTH_STRIKE,
    WEAKEN,
    FIRE_STRIKE,
    BONES_TO_BANANAS,
    WIND_BOLT,
    CURSE,
    BIND,
    LOW_LEVEL_ALCHEMY,
    WATER_BOLT,
    VARROCK_TELEPORT,
    LVL_2_ENCHANT,
    EARTH_BOLT,
    LUMBRIDGE_TELEPORT,
    TELEKINETIC_GRAB,
    FIRE_BOLT,
    FALADOR_TELEPORT,
    CRUMBLE_UNDEAD,
    TELEPORT_TO_HOUSE,
    WIND_BLAST,
    SUPERHEAT_ITEM,
    CAMELOT_TELEPORT,
    WATER_BLAST,
    LVL_3_ENCHANT,
    IBAN_BLAST,
    SNARE,
    MAGIC_DART,
    ARDOUGNE_TELEPORT,
    EARTH_BLAST,
    HIGH_LEVEL_ALCHEMY,
    CHARGE_WATER_ORB,
    LVL_4_ENCHANT,
    WATCHTOWER_TELEPORT,
    FIRE_BLAST,
    CHARGE_EARTH_ORB,
    BONES_TO_PEACHES,
    SARADOMIN_STRIKE,
    CLAWS_OF_GUTHIX,
    FLAMES_OF_ZAMORAK,
    TROLLHEIM_TELEPORT,
    WIND_WAVE,
    CHARGE_FIRE_ORB,
    TELEPORT_TO_APE_ATOLL,
    WATER_WAVE,
    CHARGE_AIR_ORB,
    VULNERABILITY,
    LVL_5_ENCHANT,
    TELEPORT_TO_HOUREND,
    EARTH_WAVE,
    ENFEEBLE,
    TELEOTHER_LUMBRIDGE,
    FIRE_WAVE,
    ENTANGLE,
    STUN,
    CHARGE,
    WIND_SURGE,
    TELEOTHER_FALADOR,
    WATER_SURGE,
    TELE_BLOCK,
    BOUNTY_TARGET,
    LVL_6_ENCHANT,
    TELEOTHER_CAMELOT,
    EARTH_SURGE,
    LVL_7_ENCHANT,
    FIRE_SURGE);

  TAncientSpell = (
    ICE_RUSH = 76,
    ICE_BLITZ,
    ICE_BURST,
    ICE_BARRAGE,
    BLOOD_RUSH,
    BLOOD_BLITZ,
    BLOOD_BURST,
    BLOOD_BARRAGE,
    SMOKE_RUSH,
    SMOKE_BLITZ,
    SMOKE_BURST,
    SMOKE_BARRAGE,
    SHADOW_RUSH,
    SHADOW_BLITZ,
    SHADOW_BURST,
    SHADOW_BARRAGE,
    PADDEWWA_TELEPORT,
    SENNTISTEN_TELEPORT,
    KHARYRLL_TELEPORT,
    LASSAR_TELEPORT,
    DAREEYAK_TELEPORT,
    CARRALLANGER_TELEPORT,
    ANNAKARL_TELEPORT,
    GHORROCK_TELEPORT,
    EDGEVILLE_HOME_TELEPORT);

  TLunarSpell = (
    LUNAR_HOME_TELEPORT = 101,
    BAKE_PIE,
    CURE_PLANT,
    MONSTER_EXAMINE,
    NPC_CONTACT,
    CURE_OTHER,
    HUMIDIFY,
    MOONCLAN_TELEPORT,
    TELE_GROUP_MOONCLAN,
    CURE_ME,
    HUNTER_KIT,
    WATERBIRTH_TELEPORT,
    TELE_GROUP_WATERBIRTH,
    CURE_GROUP,
    STAT_SPY,
    BARBARIAN_TELEPORT,
    TELE_GROUP_BARBARIAN,
    SUPERGLASS_MAKE,
    TAN_LEATHER,
    KHAZARD_TELEPORT,
    TELE_GROUP_KHAZARD,
    DREAM,
    STRING_JEWELLERY,
    STAT_RESTORE_POT_SHARE,
    MAGIC_IMBUE,
    FERTILE_SOIL,
    BOOST_POTION_SHARE,
    FISHING_GUILD_TELEPORT,
    TELE_GROUP_FISHING_GUILD,
    PLANK_MAKE,
    CATHERBY_TELEPORT,
    TELE_GROUP_CATHERBY,
    RECHARGE_DRAGONSTONE,
    ICE_PLATEAU_TELEPORT,
    TELE_GROUP_ICE_PLATEAU,
    ENERGY_TRANSFER,
    HEAL_OTHER,
    VENGEANCE_OTHER,
    VENGEANCE,
    HEAL_GROUP,
    SPELLBOOK_SWAP,
    GEOMANCY,
    SPIN_FLAX,
    OURANIA_TELEPORT);

  TArceuusSpell = (
    ARCEUUS_HOME_TELEPORT = 145,
    BASIC_REANIMATION,
    LIBRARY_TELEPORT,
    ADEPT_REANIMATION,
    EXPERT_REANIMATION,
    MASTER_REANIMATION,
    DRAYNOR_MANOR_TELEPORT,
    UNKNOWN_1,
    MIND_ALTAR_TELEPORT,
    RESPAWN_TELEPORT,
    SALVE_GRAVEYARD_TELEPORT,
    FENKENSTRAIN_CASTLE_TELEPORT,
    WEST_ARDOUGNE_TELEPORT,
    HARMONY_ISLAND_TELEPORT,
    CEMETARY_TELEPORT,
    RESURRECT_CROPS,
    BARROW_TELEPORT,
    APE_ATOLL_TELEPORT,
    BATTLEFRONT_TELEPORT,
    INFERIOR_DEMONBANE,
    SUPERIOR_DEMON_BANE,
    DARK_DEMONBANE,
    MARK_OF_DARKNESS,
    GHOSTLY_GRASP,
    SKELETAL_GRASP,
    UNDEAD_GRASP,
    WARD_OF_ARCEUUS,
    LESSER_CORRUPTION,
    GREATER_CORRUPTION,
    DEMONIC_OFFERING,
    SINISTER_OFFERING,
    DEGRIME,
    SHADOW_VEIL,
    VILE_VIGOUR,
    DARK_LURE,
    DEATH_CHARGE,
    RESURRECT_LESSER_GHOST,
    RESURRECT_LESSER_SKELETON,
    RESURRECT_LESSER_ZOMBIE,
    RESURRECT_SUPERIOR_GHOST,
    RESURRECT_SUPERIOR_SKELETON,
    RESURRECT_SUPERIOR_ZOMBIE,
    RESURRECT_GREATER_GHOST,
    RESURRECT_GREATER_SKELETON,
    RESURRECT_GREATER_ZOMBIE);

const
  R_SPELLBOOK_VARBIT = 4070;

{*
R_CastSpell - Utility Function
~~~~~~~~~~~~~~~~~~~~~~
Returns true if the specified spell was cast.
*}
Function R_CastSpell(Child: Int32): Boolean;
var
  Widget: RSWidget;
begin
  if not R_OpenGameTab(GAMETAB_MAGIC) then
    Exit;

  Widget := RSWidget.Get(R_SPELLBOOK_CONTAINER.Group, Child);
  if Widget.ref = nil then
    Exit;

  if not Widget.IsHidden then
  begin
    Mouse.Click(Widget.Bounds, MOUSE_LEFT);
    Exit(True);
  end;

  Widget.Free;
end;

{*
R_CastSpell
~~~~~~~~~~~~~~~~~~~~~~
Returns true if the specified spell was cast.
  Only accepts spell from the Standard Spell Book (TStandardSpell).

Example:
  R_CastSpell(CONFUSE);
*}
Function R_CastSpell(Spell: TStandardSpell): Boolean; overload;
begin
  if (RSClient.GetVarBit(R_SPELLBOOK_VARBIT) = 0) then
    Result := R_CastSpell(Ord(Spell));
end;

{*
R_CastSpell
~~~~~~~~~~~~~~~~~~~~~~
Returns true if the specified spell was cast.
  Only accepts spell from the Ancient Spell Book (TAncientSpell).

Example:
  R_CastSpell(ICE_BARRAGE);
*}
Function R_CastSpell(Spell: TAncientSpell): Boolean; overload;
begin
  if (RSClient.GetVarBit(R_SPELLBOOK_VARBIT) = 1) then
    Result := R_CastSpell(Ord(Spell));
end;

{*
R_CastSpell
~~~~~~~~~~~~~~~~~~~~~~
Returns true if the specified spell was cast.
  Only accepts spell from the Lunar Spell Book (TLunarSpell).

Example:
  R_CastSpell(CURE_OTHER);
*}
Function R_CastSpell(Spell: TLunarSpell): Boolean; overload;
begin
  if (RSClient.GetVarBit(R_SPELLBOOK_VARBIT) = 2) then
    Result := R_CastSpell(Ord(Spell));
end;

{*
R_CastSpell
~~~~~~~~~~~~~~~~~~~~~~
Returns true if the specified spell was cast.
  Only accepts spell from the Arceuus Spell Book (TArceuusSpell).

Example:
  R_CastSpell(REANIMATE_HORROR);
*}
Function R_CastSpell(Spell: TArceuusSpell): Boolean; overload;
begin
  if (RSClient.GetVarBit(R_SPELLBOOK_VARBIT) = 3) then
    Result := R_CastSpell(Ord(Spell));
end;

{*
R_IsSpellSelected
~~~~~~~~~~~~~~~~~~~~~~
Returns true if a spell is selected.

Example:
  if R_IsSpellSelected then
*}
{Function R_IsSpellSelected(): Boolean;
begin
 //Need the hook..
end;}
